import sys

class P(process):
    def setup(left:P, neighbours:tuple):
        self.leaderid = None
        self.neighbours = neighbours
        output(f"Process with id {P} is being set up.")

    def initiate():
        send(('Election', self), to=left)

    def receive(msg=('Election', p)):
        if p > self:
            send(('Election', p), to=left)
        if p < self:
            if not sent(('Election', self)):
                send(('Election', self), to=left)
        if p == self:
            send(('Leader', self), to=left)

    def receive(msg=('Leader', leader)):
        leaderid = leader
        if leader != self:
            send(('Leader', leader), to=left)

    def run():
        initiate()
        await (some(received(('Leader', _))))
        output("Leader is", 1)


def main():
    config(channel="fifo")
    #graph_file = "F:\GitHub\distalgo\da\examples\MIS\graph-1.txt"
    #f = open(graph_file)
    n = 3
    m = 2
    #n = int(f.readline())
    #m = int(f.readline())
    #n = int(input())
    #m = int(input())

    dict = {x: [] for x in range(n)}

    for line in range(m):
        #x = int(input())
        #y = int(input())
        #[x,y] = [int(a) for a in f.readline().strip().split()]
        x = 1
        y = 2
        dict[x].append(y)
        dict[y].append(x)

    ps = []
    for i in range(n):
        p = new(P)
        ps.append(p)

    for i,p in enumerate(ps):
        setup({p}, (ps[(i+1 if i < (len(ps)-1) else 0)], tuple(dict[i]), ))

    start(ps)

